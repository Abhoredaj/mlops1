name: Python application

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:

    runs-on:  ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -v
  
  #deploy:
  #  needs: [test]
  #  runs-on: ubuntu-latest

  #  steps:
  #  - name: Checkout source code
  #    uses: actions/checkout@v2

  #  - name: Generate deployment package
  #    run: zip -r deploy.zip . -x '*.git*'

  #  - name: Deploy to EB
  #    uses: einaregilsson/beanstalk-deploy@v20
  #    with:
  #      aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #      aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #      application_name: mlops1
  #      environment_name: Mlops1-env
  #      version_label: 12348
  #      region: "ap-south-1"
  #      deployment_package: deploy.zip
    #- name: Deploy to Heroku
    #  env:
    #    HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
    #    HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
    #  if: github.ref == 'refs/heads/main' && job.status == 'success'
    #  run: |
    #    git remote add heroku https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git
    #    git push heroku HEAD:main -f